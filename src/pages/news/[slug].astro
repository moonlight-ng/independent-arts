---
import Layout from "@layout/Default.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { parse, format } from 'date-fns';

export async function getStaticPaths() {
  const newsEntries = await getCollection("news");
  return newsEntries.map(post => ({
    params: {
      slug: post.slug
    },
    props: {
      post
    }
  }));
}

const { post } = Astro.props;
let {data} = post;
const { Content } = await post.render()

const seoImage = data.seoImageUrl || data.imageUrl;
const articleSEO = 	{
	"route": `/news/${data.url}`,
	"data": {
		"pageTitle": data.title,
		"pageDescription": data.description,
		"seoTitle": `i-a · ${data.title}`,
		"seoImage": `${Astro.site}${seoImage.src}`,
	}
};

// Remove the leading '#' and parse the date
let formattedDate = 'Invalid Date';
try {
  const date = parse(data.date, 'dd.MM.yyyy', new Date());
  formattedDate = format(date, 'MMM d, yyyy');
} catch (error) {
  console.error('Error parsing date:', error);
}
---

<Layout article={articleSEO}>
  <main>
    <div class="newsHeader">
      <div class="newsHeaderImage" aria-hidden="true">
        <Image src={data.imageUrl} alt="{data.title}" />
      </div>
      <h1 class="newsHeaderTitle">{data.title}</h1>
      <div class="newsHeaderDetails">
        <p>{data.author} ・ {formattedDate}</p>
      </div>
    </div>
    <div class="l-container newsContentContainer">
      <Content />
      <div class="newsContentFooter">✦</div>
    </div>
  </main>
</Layout>

<style>
  .newsHeader {
    width: 100%;
    max-width: 700px;
    margin: 1.5em auto;
    padding: 0 24px;
  }
  .newsHeaderImage {
    margin-bottom: 2em;
  }
  .newsHeaderImage > img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .newsHeaderTitle {
    font-size: 3rem;
  }
  .newsHeaderDetails {
    display: flex;
    column-gap: .5em;
    font-family: var(--font-sans);
    font-size: 1.6rem;
  }
  .newsContentContainer {
    width: 100%;
    max-width: 700px;
    padding: 0 24px;
    margin: 0 auto;
    font-family: var(--font-serif);
  }
  .newsContentFooter {
    margin: 100px auto;
    text-align: center;
    font-size: 2rem;
    color: var(--color-gray-500);
  }
  .newsContentContainer p {
    font-size: 1.6rem;
    text-decoration: underline;
    color: red;
  }

  @media screen and (max-width: 750px) {
    .newsHeader {
      padding: 0 20px;
    }
  }
  @media screen and (max-width: 600px) {
    .newsHeader {
      padding: 0 16px;
    }
  }
</style>
